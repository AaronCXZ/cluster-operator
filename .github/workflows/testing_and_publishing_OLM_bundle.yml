# action to test our operator lifecycle manager bundle
# See https://github.com/rabbitmq/OLM-Package-Repo for more info.
name: test-and-publish-OLM-bundle

on:
    push:
      # Pattern matched against refs/tags
      branches:
        - "testing_olm"
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true
env:
  # registry information where we want to store the operator image and the operator index image
  DOCKER_REGISTRY_SERVER: docker.io/rabbitmqoperator
  OLM_IMAGE: rabbitmq-for-kubernetes-olm
  OLM_INDEX_IMAGE: rabbitmq-for-kubernetes-olm-index
  OLM_IMAGE_TAG: 0.0.0


jobs:
    build-image:
        name: Build operator image
        runs-on: ubuntu-latest
        permissions:
          contents: 'read'
          id-token: 'write'
        steps:
        - uses: actions/checkout@v4
          # for tkgi we would store the binary in the repo to avoid downloading it from tanzunet            
        - name: Auth to Google Cloud
          id: auth
          uses: 'google-github-actions/auth@v2'
          with:
            token_format: access_token
            workload_identity_provider: ${{ secrets.GCP_IDENTITY_PROVIDER }}
            service_account: ${{ secrets.GCP_SA }}

        - name: Login to Docker Hub
          if: github.event_name != 'pull_request'
          uses: docker/login-action@v3
          with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: OCI Metadata for multi-arch image
          id: meta
          uses: docker/metadata-action@v5
          with:
            # list of Docker images to use as base name for tags
            images: |
                rabbitmqoperator/rabbitmq-for-kubernetes-dev-olm
            tags: |
              ${{ env.OLM_IMAGE_TAG }}
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: .
            platforms: linux/amd64, linux/arm64, linux/ppc64le, linux/s390x
            push: ${{ github.event_name != 'pull_request' }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

    create-olm-package:
        name: Create the OLM Packaging
        runs-on: ubuntu-latest
        needs: build-image
        container: 
            image: us.gcr.io/cf-rabbitmq-for-k8s-bunny/rabbitmq-for-kubernetes-ci-olm
            options: --privileged
        permissions:
            contents: 'write'
            id-token: 'write'
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: create-olm-package
          env:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
            DOCKER_REGISTRY_SERVER: ${{ env.DOCKER_REGISTRY_SERVER }}
            OLM_IMAGE: ${{ env.OLM_IMAGE }}
            OLM_INDEX_IMAGE: ${{ env.OLM_INDEX_IMAGE }}
            OLM_IMAGE_TAG: ${{ env.OLM_IMAGE_TAG }}
          run: |   
            sed '/mount_program =/s/^#//' -i /etc/containers/storage.conf
            podman login -u $username -p $password
            git config --global --add safe.directory /__w/cluster-operator/cluster-operator
            git clone https://github.com/rabbitmq/OLM-Package-Repo -b using_dockerhub_instead_of_gcr
            make generate-installation-manifest
            cp ./config/crd/bases/rabbitmq.com_rabbitmqclusters.yaml ./OLM-Package-Repo/generate_OLM/generate_OLM_cluster_operator/manifests_crds/crds.yaml
            cp ./releases/cluster-operator.yml ./OLM-Package-Repo/generate_OLM/generate_OLM_cluster_operator/manifests_crds/cluster-operator.yaml
            cp OLM-Package-Repo/generate_OLM/generate_OLM_cluster_operator/generators/cluster-service-version-generator-test.yml OLM-Package-Repo/generate_OLM/generate_OLM_cluster_operator/generators/cluster-service-version-generator.yml 
            cd ./OLM-Package-Repo/generate_OLM/generate_OLM_cluster_operator/
            python3 generate-olm-package.py ./manifests_crds/cluster-operator.yaml $OLM_IMAGE_TAG ./
            sed -i -e "s/rabbitmqoperator\/cluster-operator:.*/rabbitmqoperator\/rabbitmq-for-kubernetes-dev-olm:$OLM_IMAGE_TAG/g" ./$OLM_IMAGE_TAG/manifests/rabbitmq.clusterserviceversion.yaml
            opm alpha bundle build -c stable -d ./$OLM_IMAGE_TAG/manifests -t $DOCKER_REGISTRY_SERVER/$OLM_IMAGE:$OLM_IMAGE_TAG -p rabbitmq-cluster-operator --image-builder podman
            echo "y" | gcloud auth configure-docker         
            podman push $DOCKER_REGISTRY_SERVER/$OLM_IMAGE:$OLM_IMAGE_TAG
            opm index add -b $DOCKER_REGISTRY_SERVER/$OLM_IMAGE:$OLM_IMAGE_TAG -t $DOCKER_REGISTRY_SERVER/$OLM_INDEX_IMAGE:$OLM_IMAGE_TAG -c podman
            podman push $DOCKER_REGISTRY_SERVER/$OLM_INDEX_IMAGE:$OLM_IMAGE_TAG
            mkdir upload
            mv "$OLM_IMAGE_TAG" ./upload
            cp ./generators/cluster-service-version-generator-openshift.yml ./generators/cluster-service-version-generator.yml
            python3 generate-olm-package.py ./manifests_crds/cluster-operator.yaml "$OLM_IMAGE_TAG" ./
            mv "$OLM_IMAGE_TAG" ./upload/$OLM_IMAGE_TAG-openshift
        - name: upload-olm-package
          uses: actions/upload-artifact@master
          with:
            name: olm-artifact
            path: "/home/runner/work/cluster-operator/cluster-operator/OLM-Package-Repo/generate_OLM/generate_OLM_cluster_operator/upload/"

    test-olm-package:
        name: Tests the OLM packaging
        runs-on: ubuntu-latest
        needs: create-olm-package
        container: us.gcr.io/cf-rabbitmq-for-k8s-bunny/rabbitmq-for-kubernetes-ci-olm
   
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Get Openshift connection info kubeconf from infrastructure repo
          env:
            GITHUB_ACCESS_TOKEN: ${{ secrets.GIT_HUB_ACCESS_TOKEN }}
          run: |
            git clone https://oauth2:"$GITHUB_ACCESS_TOKEN"@github.com/rabbitmq/infrastructure
            
        - name: Connect to the Openshift cluster and deploy the operators through OLM
          run: |   
            git clone https://github.com/rabbitmq/OLM-Package-Repo -b using_dockerhub_instead_of_gcr
            mkdir $HOME/.kube
            cp ./infrastructure/k8s/okd/admin-kubeconfig.yaml $HOME/.kube/config
            export KUBECONFIG=$HOME/.kube/config
            export ENVIRONMENT=openshift
            kubectl config use-context admin
            ./OLM-Package-Repo/testfiles/install-rabbitmq-cluster-operator.sh
            export K8S_OPERATOR_NAMESPACE=rabbitmq-system-olm
            export SYSTEM_TEST_NAMESPACE=rabbitmq-system-olm 
            make system-tests

        - name: Clean up
          if: always()
          run: | 
            export KUBECONFIG=./infrastructure/k8s/okd/admin-kubeconfig.yaml
            kubectl config use-context admin
            ./OLM-Package-Repo/testfiles/uninstall-rabbitmq-cluster-operator.sh

    publish-bundle:
        name: Publish on OperatorHub and Openshift market-place
        runs-on: ubuntu-latest
        # if: startsWith(github.ref, 'refs/tags/v')
        needs: test-olm-package
        container: us.gcr.io/cf-rabbitmq-for-k8s-bunny/rabbitmq-for-kubernetes-ci-olm
        # Create the PR to OperatorHUB
        steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: download olm-artifact from previous step
          uses: actions/download-artifact@master
          with:
            name: olm-artifact
        - name: CreateOperatorHubPR
          env:
            TOKEN: ${{ secrets.OPERATORHUB_TOKEN }}
            OLM_IMAGE_TAG: ${{ env.OLM_IMAGE_TAG }}
          run: |
            git config --global user.name "DanielePalaia"
            git config --global user.email "dpalaia@vmware.com"
            git clone https://github.com/rabbitmq/community-operators
            mkdir -p community-operators/operators/rabbitmq-cluster-operator
            cd community-operators/operators/rabbitmq-cluster-operator
            git branch rabbitmq-cluster-operator-$OLM_IMAGE_TAG
            git checkout rabbitmq-cluster-operator-$OLM_IMAGE_TAG
            cp -fR ./../../../$OLM_IMAGE_TAG .
            git add .
            git commit -s -m "RabbitMQ operator new release"
            git push https://DanielePalaia:"$TOKEN"@github.com/rabbitmq/community-operators
            cd ./../../..
        
        # Create the PR to redhat openshift ecosystem
        - name: CreateOpenshiftEcosystemPR
          env:
            TOKEN: ${{ secrets.OPERATORHUB_TOKEN }}
            OLM_IMAGE_TAG: ${{ env.OLM_IMAGE_TAG }}
          run: |
            git clone https://github.com/rabbitmq/community-operators-prod
            cd community-operators-prod/operators/rabbitmq-cluster-operator
            git branch rabbitmq-cluster-operator-$OLM_IMAGE_TAG
            git checkout rabbitmq-cluster-operator-$OLM_IMAGE_TAG
            cp -fR ./../../../$OLM_IMAGE_TAG-openshift .
            git add .
            git commit -s -m "RabbitMQ operator new release"
            git push https://DanielePalaia:"$TOKEN"@github.com/rabbitmq/community-operators-prod  